<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>